<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>